<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>